<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>